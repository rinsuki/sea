name: Build and Test

on:
  pull_request:
    branches-ignore:
      - "renovate/**"
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        with:
          path: docker-cache/src
          key: v1-${{ hashFiles('./Dockerfile') }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            v1-${{ hashFiles('./Dockerfile') }}-${{ github.ref }}-
            v1-${{ hashFiles('./Dockerfile') }}-
            v1-
      - name: Launch PostgreSQL Container
        run: |
          docker run --name postgres -e POSTGRES_PASSWORD=onlyfortesting -d postgres:10-alpine
      - name: Build docker container
        run: |
          docker buildx create --use
          docker buildx build --tag rinsuki/sea:latest --cache-from=type=local,src=./docker-cache/src --cache-to=type=local,dest=./docker-cache/dest,mode=max --load .
          cd docker-cache && mv src old && mv dest src && rm -rf old
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
      - name: Run migration
        run: |
          docker run --rm --link postgres:postgres --env-file ./ci-files/.env rinsuki/sea yarn migration:up
      - name: Run test
        run: |
          docker run --rm --link postgres:postgres --env-file ./ci-files/.env -v $(pwd)/coverage:/app/coverage rinsuki/sea sh -c 'yarn test --coverage --coverageReporters=cobertura --coverageReporters=html'
      - name: Run migration:downall
        run: |
          docker run --rm --link postgres:postgres --env-file ./ci-files/.env rinsuki/sea yarn migration:downall
      - name: Upload docker image
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          ./ci-files/cat-env.py DOCKERHUB_TOKEN | docker login --username rinsuki --password-stdin
          docker push rinsuki/sea:latest
          docker logout
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare for Publish code coverage
        run: |
          sudo chown $(whoami) ./coverage/cobertura-coverage.xml
          python3 -c 'import os;r=open("./coverage/cobertura-coverage.xml", "r").read().replace("/app", os.getcwd());open("./coverage/cobertura-coverage.xml", "w").write(r)'
      - name: Upload Code Coverage to codecov
        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/cobertura-coverage.xml
